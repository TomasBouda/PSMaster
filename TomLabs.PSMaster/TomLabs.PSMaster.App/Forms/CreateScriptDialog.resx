<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>